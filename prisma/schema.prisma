// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(dbgenerated("gen_random_uuid()"))
    name      String
    email     String
    phone     String?
    gender    String?
    createdAt DateTime @default(dbgenerated("timezone('utc', now())")) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")
    posts     Post[]
    votes     Vote[]
}

model Post {
    id            String    @id @default(dbgenerated("gen_random_uuid()"))
    title         String
    body          String?
    media         String?
    createdAt     DateTime? @default(dbgenerated("timezone('utc', now())")) @map("created_at")
    updatedAt     DateTime? @updatedAt @map("updated_at")
    authorId      String    @map("author_id")
    author        User      @relation(fields: [authorId], references: [id])
    upvoteCount   Int       @default(0) @map("upvote_count")
    downvoteCount Int       @default(0) @map("downvote_count")
    votes         Vote[]
}

model Vote {
    id        String    @id @default(dbgenerated("gen_random_uuid()"))
    voteType  Int       @map("vote_type")
    voterId   String    @map("voter_id")
    voter     User      @relation(fields: [voterId], references: [id])
    postId    String    @map("post_id")
    post      Post      @relation(fields: [postId], references: [id])
    createdAt DateTime? @default(dbgenerated("timezone('utc', now())")) @map("created_at")

    @@unique([voterId, postId])
}
